import axios from "axios";
import backendRoutes from "../../routes/backendROutes";
import { useEffect, useState } from "react";
import Loader from "../Loader";
import AdminSessionExpired from "./AdminSessionExpired";

const AdminHeroSection = () => {


    const [loading, setLoading] = useState(true);
    const [data, setData] = useState({})
    const [isSessionExpired, setIsSessionExpired] = useState(false)

    const fetchData = async () => {
        try {
            console.log("Fethcing Data for Hero Seciton");
            const token = localStorage.getItem('adminToken');

            const response = await axios.get(
                backendRoutes.admin.getTotals,
                {headers: {
                    Authorization: `Bearer ${token}`
                }}
            )

            if(response.status === 401) {
                setIsSessionExpired(true);
                return
            }

            if(!response.data) {
                console.log("Failed Fetching Data");
                return
            }

            const {data} = response.data;

            setData(data);

        } catch (error) {
            console.error("Error Fetching Data", error);
        } finally {
            setLoading(false)
        }
    }

    useEffect(() => {
        fetchData();
    },[])

    const Icons = {
        Users: (
            <svg width="100%" height="100%" viewBox="0 0 70 70" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M34.9998 11.667C38.094 11.667 41.0615 12.8962 43.2494 15.0841C45.4373 17.272 46.6665 20.2395 46.6665 23.3337C46.6665 26.4279 45.4373 29.3953 43.2494 31.5832C41.0615 33.7712 38.094 35.0003 34.9998 35.0003C31.9056 35.0003 28.9382 33.7712 26.7503 31.5832C24.5623 29.3953 23.3332 26.4279 23.3332 23.3337C23.3332 20.2395 24.5623 17.272 26.7503 15.0841C28.9382 12.8962 31.9056 11.667 34.9998 11.667ZM34.9998 40.8337C47.8915 40.8337 58.3332 46.0545 58.3332 52.5003V58.3337H11.6665V52.5003C11.6665 46.0545 22.1082 40.8337 34.9998 40.8337Z" fill="#800020"/>
            </svg>
        ),
        Sellers: (
            <svg width="100%" height="100%" viewBox="0 0 70 70" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M34.9998 11.667C38.094 11.667 41.0615 12.8962 43.2494 15.0841C45.4373 17.272 46.6665 20.2395 46.6665 23.3337C46.6665 26.4279 45.4373 29.3953 43.2494 31.5832C41.0615 33.7712 38.094 35.0003 34.9998 35.0003C31.9056 35.0003 28.9382 33.7712 26.7503 31.5832C24.5623 29.3953 23.3332 26.4279 23.3332 23.3337C23.3332 20.2395 24.5623 17.272 26.7503 15.0841C28.9382 12.8962 31.9056 11.667 34.9998 11.667ZM34.9998 40.8337C47.8915 40.8337 58.3332 46.0545 58.3332 52.5003V58.3337H11.6665V52.5003C11.6665 46.0545 22.1082 40.8337 34.9998 40.8337Z" fill="#800020"/>
            </svg>
        ),
        Revenue: (
            <svg width="100%" height="100%" viewBox="0 0 60 60" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path fillRule="evenodd" clipRule="evenodd" d="M30.0487 7.5C24.4024 7.5 19.2587 9.365 16.2149 10.8888C15.9399 11.0263 15.6833 11.1604 15.4449 11.2912C14.9724 11.5487 14.5699 11.7888 14.2499 12L17.7124 17.0975L19.3424 17.7462C25.7124 20.96 34.2549 20.96 40.6262 17.7462L42.4762 16.7863L45.7499 12C45.071 11.5589 44.366 11.1594 43.6387 10.8037C40.6099 9.29625 35.5887 7.5 30.0499 7.5M21.9974 13.27C20.7716 13.0393 19.5607 12.7354 18.3712 12.36C21.2224 11.0937 25.4712 9.75 30.0499 9.75C33.2212 9.75 36.2199 10.395 38.6999 11.2125C35.7937 11.6213 32.6924 12.315 29.7374 13.1687C27.4124 13.8412 24.6949 13.7688 21.9974 13.27ZM41.9474 19.6L41.6399 19.755C34.6324 23.29 25.3374 23.29 18.3299 19.755L18.0387 19.6075C7.50992 31.1588 -0.527584 52.4963 30.0487 52.4963C60.6249 52.4963 52.3924 30.7625 41.9474 19.6ZM28.7499 30C28.0869 30 27.451 30.2634 26.9822 30.7322C26.5133 31.2011 26.2499 31.837 26.2499 32.5C26.2499 33.163 26.5133 33.7989 26.9822 34.2678C27.451 34.7366 28.0869 35 28.7499 35V30ZM31.2499 27.5V26.25H28.7499V27.5C27.4238 27.5 26.1521 28.0268 25.2144 28.9645C24.2767 29.9021 23.7499 31.1739 23.7499 32.5C23.7499 33.8261 24.2767 35.0979 25.2144 36.0355C26.1521 36.9732 27.4238 37.5 28.7499 37.5V42.5C27.6624 42.5 26.7362 41.8063 26.3912 40.8337C26.34 40.6746 26.2574 40.5274 26.1483 40.4008C26.0393 40.2741 25.9059 40.1707 25.7561 40.0965C25.6064 40.0223 25.4432 39.9789 25.2764 39.9688C25.1096 39.9588 24.9424 39.9823 24.7848 40.038C24.6272 40.0936 24.4824 40.1804 24.3589 40.293C24.2354 40.4056 24.1358 40.5419 24.0659 40.6937C23.9959 40.8455 23.9572 41.0098 23.9519 41.1768C23.9465 41.3439 23.9748 41.5103 24.0349 41.6663C24.3796 42.6413 25.0181 43.4855 25.8625 44.0826C26.7069 44.6796 27.7157 45.0002 28.7499 45V46.25H31.2499V45C32.576 45 33.8478 44.4732 34.7854 43.5355C35.7231 42.5979 36.2499 41.3261 36.2499 40C36.2499 38.6739 35.7231 37.4021 34.7854 36.4645C33.8478 35.5268 32.576 35 31.2499 35V30C32.3374 30 33.2637 30.6938 33.6087 31.6663C33.6599 31.8254 33.7424 31.9726 33.8515 32.0992C33.9606 32.2259 34.0939 32.3293 34.2437 32.4035C34.3935 32.4777 34.5566 32.5211 34.7234 32.5312C34.8903 32.5412 35.0574 32.5177 35.215 32.462C35.3726 32.4064 35.5174 32.3196 35.6409 32.207C35.7644 32.0944 35.8641 31.9581 35.934 31.8063C36.0039 31.6545 36.0427 31.4902 36.048 31.3232C36.0533 31.1561 36.025 30.9897 35.9649 30.8337C35.6203 29.8587 34.9818 29.0145 34.1373 28.4174C33.2929 27.8204 32.2841 27.4998 31.2499 27.5ZM31.2499 37.5V42.5C31.913 42.5 32.5488 42.2366 33.0177 41.7678C33.4865 41.2989 33.7499 40.663 33.7499 40C33.7499 39.337 33.4865 38.7011 33.0177 38.2322C32.5488 37.7634 31.913 37.5 31.2499 37.5Z" fill="#800020"/>
            </svg>

        ),
        Orders: (
            <svg width="100%" height="100%" viewBox="0 0 70 70" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M52.4998 53.9587C51.3395 53.9587 50.2267 53.4977 49.4062 52.6772C48.5858 51.8568 48.1248 50.744 48.1248 49.5837C48.1248 48.4233 48.5858 47.3105 49.4062 46.4901C50.2267 45.6696 51.3395 45.2087 52.4998 45.2087C53.6602 45.2087 54.773 45.6696 55.5934 46.4901C56.4139 47.3105 56.8748 48.4233 56.8748 49.5837C56.8748 50.744 56.4139 51.8568 55.5934 52.6772C54.773 53.4977 53.6602 53.9587 52.4998 53.9587ZM56.8748 27.7087L62.5915 35.0003H49.5832V27.7087M17.4998 53.9587C16.3395 53.9587 15.2267 53.4977 14.4062 52.6772C13.5858 51.8568 13.1248 50.744 13.1248 49.5837C13.1248 48.4233 13.5858 47.3105 14.4062 46.4901C15.2267 45.6696 16.3395 45.2087 17.4998 45.2087C18.6602 45.2087 19.773 45.6696 20.5934 46.4901C21.4139 47.3105 21.8748 48.4233 21.8748 49.5837C21.8748 50.744 21.4139 51.8568 20.5934 52.6772C19.773 53.4977 18.6602 53.9587 17.4998 53.9587ZM58.3332 23.3337H49.5832V11.667H8.74984C5.51234 11.667 2.9165 14.2628 2.9165 17.5003V49.5837H8.74984C8.74984 51.9043 9.67171 54.1299 11.3127 55.7708C12.9536 57.4118 15.1792 58.3337 17.4998 58.3337C19.8205 58.3337 22.0461 57.4118 23.687 55.7708C25.328 54.1299 26.2498 51.9043 26.2498 49.5837H43.7498C43.7498 51.9043 44.6717 54.1299 46.3126 55.7708C47.9536 57.4118 50.1792 58.3337 52.4998 58.3337C54.8205 58.3337 57.0461 57.4118 58.687 55.7708C60.328 54.1299 61.2498 51.9043 61.2498 49.5837H67.0832V35.0003L58.3332 23.3337Z" fill="#800020"/>
            </svg>

        ),
        Products: (
            <svg width="100%" height="100%" viewBox="0 0 60 60" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M53.5 35.625L35.625 53.5C35.125 54 34.5625 54.375 33.9375 54.625C33.3125 54.875 32.6875 55 32.0625 55C31.4375 55 30.8125 54.875 30.1875 54.625C29.5625 54.375 29 54 28.5 53.5L6.4375 31.4375C5.97917 30.9792 5.625 30.4483 5.375 29.845C5.125 29.2417 5 28.6058 5 27.9375V10C5 8.625 5.49 7.44833 6.47 6.47C7.45 5.49167 8.62667 5.00167 10 5H27.9375C28.6042 5 29.25 5.13583 29.875 5.4075C30.5 5.67917 31.0417 6.04333 31.5 6.5L53.5 28.5625C54 29.0625 54.365 29.625 54.595 30.25C54.825 30.875 54.9392 31.5 54.9375 32.125C54.9358 32.75 54.8217 33.365 54.595 33.97C54.3683 34.575 54.0033 35.1267 53.5 35.625ZM16.25 20C17.2917 20 18.1775 19.6358 18.9075 18.9075C19.6375 18.1792 20.0017 17.2933 20 16.25C19.9983 15.2067 19.6342 14.3217 18.9075 13.595C18.1808 12.8683 17.295 12.5033 16.25 12.5C15.205 12.4967 14.32 12.8617 13.595 13.595C12.87 14.3283 12.505 15.2133 12.5 16.25C12.495 17.2867 12.86 18.1725 13.595 18.9075C14.33 19.6425 15.215 20.0067 16.25 20Z" fill="#800020"/>
            </svg>

        ),

    }

    if(loading){
        return <Loader/>
    }

  return (
    <div className="adminHeroSection">
        {isSessionExpired && <AdminSessionExpired/>}
        {Object.entries(data).map(([key, value], index) => (
            <div className="card" key={index}>
                <h3>Total {key}</h3>
                <div className="row">
                    <p>{key === "Revenue" ? `â‚± ${value}` : value}</p>
                    <div className="icon">
                        {Icons[key]} 
                    </div>
                </div>
                
            </div>
        ))}
    </div>
  )
}

export default AdminHeroSection
